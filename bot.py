import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω)
BOT_TOKEN = "8407984620:AAGFjSxDdrEoq_-vq_UllVloTVKZxF3NVTY"

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
ADMIN_IDS = [982741411, 811152431, 1678290901]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class OrderForm(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()
    waiting_for_telegram = State()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def get_main_menu():
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–µ–¥–∑–∞–∫–∞–∑",
        callback_data="order"
    ))
    builder.add(InlineKeyboardButton(
        text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å",
        url="https://t.me/ylnaaaw"
    ))
    builder.adjust(1)
    return builder.as_markup()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    user_id = message.from_user.id
    
    if user_id in ADMIN_IDS:
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö."
        )
    else:
        welcome_text = (
            "üéì <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AnyWay!</b>\n\n"
            "AnyWay - —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —à–∫–æ–ª—å–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:\n\n"
            "üìö <b>–í—ã–±—Ä–∞—Ç—å –æ–ª–∏–º–ø–∏–∞–¥—ã –∏ –∫–æ–Ω–∫—É—Ä—Å—ã</b> –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≤—É–∑ –º–µ—á—Ç—ã\n"
            "üìÖ <b>–ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É</b> —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º –¥–µ–¥–ª–∞–π–Ω–æ–≤\n"
            "üë• <b>–ù–∞–π—Ç–∏ –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞</b> –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —É—á–µ–±—ã\n"
            "üí¨ <b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É</b> –æ–ª–∏–º–ø–∏–∞–¥–Ω–∏–∫–æ–≤\n"
            "üß† <b>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ</b> –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è\n\n"
            "üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏:</b> 399—Ä/–º–µ—Å—è—Ü. –Ω–æ –ø–æ –ø—Ä–µ–¥–∑–∞–∫–∞–∑—É –¥–ª—è –í–∞—Å —Å–∫–∏–¥–∫–∞ 40%, —á—Ç–æ –¥–∞–µ—Ç –ø—Ä–∞–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º –≤—Å–µ–≥–æ –∑–∞ 240 —Ä—É–±–ª–µ–π! \n\n"
            "–ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Ä–∞–º–∫–∞—Ö –°—Ç–∞—Ä—Ç–∞–ø –ê–∫–∞–¥–µ–º–∏–∏ –°–∫–æ–ª–∫–æ–≤–æ.\n"
            "–û—Ñ–æ—Ä–º–∏—Ç–µ –ø—Ä–µ–¥–∑–∞–∫–∞–∑ –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –æ–¥–Ω–∏–º–∏ –∏–∑ –ø–µ—Ä–≤—ã—Ö!"
        )
        
        await message.answer(
            welcome_text,
            reply_markup=get_main_menu(),
            parse_mode="HTML"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É"
@dp.callback_query(F.data == "order")
async def process_order_callback(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text(
        "üìù <b>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ø—Ä–µ–¥–∑–∞–∫–∞–∑</b>\n\n"
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã—Ö.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–∏–º—è</b>:",
        parse_mode="HTML"
    )
    await state.set_state(OrderForm.waiting_for_name)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
@dp.message(StateFilter(OrderForm.waiting_for_name))
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer(
        "üì± –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>:\n"
        "(–≤ —Ñ–æ—Ä–º–∞—Ç–µ +7XXXXXXXXXX)",
        parse_mode="HTML"
    )
    await state.set_state(OrderForm.waiting_for_phone)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@dp.message(StateFilter(OrderForm.waiting_for_phone))
async def process_phone(message: types.Message, state: FSMContext):
    await state.update_data(phone=message.text)
    await message.answer(
        "üí¨ –ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥! –í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–∞–∫–∫–∞—É–Ω—Ç –≤ Telegram</b>:\n"
        "(–Ω–∞–ø—Ä–∏–º–µ—Ä: @username –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ username)",
        parse_mode="HTML"
    )
    await state.set_state(OrderForm.waiting_for_telegram)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞
@dp.message(StateFilter(OrderForm.waiting_for_telegram))
async def process_telegram(message: types.Message, state: FSMContext):
    await state.update_data(telegram=message.text)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
    data = await state.get_data()
    user = message.from_user
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_message = (
        "üÜï <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</b>\n\n"
        f"üë§ <b>–ò–º—è:</b> {data['name']}\n"
        f"üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {data['phone']}\n"
        f"üí¨ <b>Telegram:</b> {data['telegram']}\n\n"
        f"üìä <b>–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>\n"
        f"üÜî ID: {user.id}\n"
        f"üë§ Username: @{user.username if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}\n"
        f"üìù –ü–æ–ª–Ω–æ–µ –∏–º—è: {user.full_name}\n\n"
        f"üí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> 240—Ä/–º–µ—Å—è—Ü"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    for admin_id in ADMIN_IDS:
        try:
            await bot.send_message(admin_id, admin_message, parse_mode="HTML")
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin_id}: {e}")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(
        "‚úÖ <b>–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b>\n\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ –ø—Ä–æ–µ–∫—Ç—É AnyWay! üéì\n"
        "–ù–∞—à–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —Å–≤—è–∂—É—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n"
        "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ - —Å–∫–æ—Ä–æ –∑–∞–ø—É—Å—Ç–∏–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É!",
        parse_mode="HTML",
        reply_markup=get_main_menu()
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–º–µ–Ω—ã (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç /cancel)
@dp.message(Command("cancel"))
async def cmd_cancel(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã.")
        return
    
    await state.clear()
    await message.answer(
        "‚ùå –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ.\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è!",
        reply_markup=get_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = (
        "ü§ñ <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É AnyWay</b>\n\n"
        "üìù <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é\n\n"
        "‚ùì <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>\n"
        "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @ylnaaaw"
    )
    await message.answer(help_text, parse_mode="HTML")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("ü§ñ –ë–æ—Ç AnyWay –∑–∞–ø—É—â–µ–Ω!")
    print(f"üìä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {ADMIN_IDS}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
